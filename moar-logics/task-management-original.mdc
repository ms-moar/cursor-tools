---
description:
globs:
alwaysApply: false
---
# Система управления задачами Memory Bank

## Основные принципы

### Автоматический расчет Story Points
Система автоматически рассчитывает Story Points на основе следующих критериев:

**Матрица сложности задач:**
- Простая задача (1-2 SP): Изменение текста, исправление опечаток, простые конфигурационные изменения
- Средняя задача (3-5 SP): Добавление новых функций, рефакторинг существующего кода, интеграция с API
- Сложная задача (8-13 SP): Архитектурные изменения, новые модули, сложная бизнес-логика
- Очень сложная задача (21+ SP): Полная переработка системы, миграция данных, критические изменения

**Алгоритм расчета Story Points:**
1. Анализ описания задачи на ключевые слова сложности
2. Оценка количества затрагиваемых файлов и модулей
3. Определение зависимостей от других задач
4. Учет технических рисков и неопределенностей
5. Применение исторических данных о похожих задачах

### Управление Epic задачами

**Структура Epic:**
- Epic содержит от 3 до 15 связанных Story
- Общий объем Epic: 20-100 Story Points
- Временные рамки: 1-4 спринта
- Четко определенная бизнес-цель

**Процесс декомпозиции Epic:**
1. Определение основной цели и критериев приемки Epic
2. Выделение ключевых пользовательских историй
3. Разбиение сложных историй на более мелкие задачи
4. Установление зависимостей между задачами
5. Планирование порядка выполнения с учетом приоритетов

**Алгоритм приоритизации задач в Epic:**
- Критический путь: задачи, блокирующие другие
- Бизнес-ценность: влияние на пользователей и доходы
- Техническая сложность: риски и время выполнения
- Зависимости: внешние и внутренние ограничения

### Интеграция с системой приоритетов

**Уровни приоритетов:**
1. **Критический (P0)**: Блокирующие ошибки, проблемы безопасности
2. **Высокий (P1)**: Важные функции, влияющие на пользователей
3. **Средний (P2)**: Улучшения производительности, новые возможности
4. **Низкий (P3)**: Технический долг, оптимизации

**Правила автоматического назначения приоритетов:**
- Задачи с ключевыми словами "критический", "блокирующий", "безопасность" → P0
- Задачи, влияющие на основной функционал → P1
- Задачи по улучшению UX/UI → P2
- Рефакторинг и оптимизация → P3

### Отслеживание прогресса выполнения

**Статусы задач:**
- **Backlog**: Задача создана, но не запланирована
- **To Do**: Задача запланирована к выполнению
- **In Progress**: Задача находится в работе
- **Code Review**: Код написан, проходит ревью
- **Testing**: Задача проходит тестирование
- **Done**: Задача полностью завершена

**Метрики отслеживания:**
- Velocity команды (SP за спринт)
- Burndown chart для спринта и Epic
- Cycle time (время от начала до завершения)
- Lead time (время от создания до завершения)

**Алгоритм расчета прогресса Epic:**
```
Прогресс Epic = (Сумма SP завершенных задач / Общая сумма SP Epic) * 100%
```

**Предупреждения и уведомления:**
- Задачи в статусе "In Progress" более 3 дней
- Epic с отклонением от плана более 20%
- Задачи без активности более 5 дней
- Превышение запланированного времени спринта

### Алгоритмы оценки времени выполнения

**Базовая формула оценки времени:**
```
Время = Story Points * Коэффициент команды * Коэффициент сложности
```

**Коэффициенты:**
- Коэффициент команды: 0.5-2.0 (зависит от опыта)
- Коэффициент сложности: 1.0-1.5 (для новых технологий)
- Коэффициент риска: 1.0-1.3 (для неопределенных задач)

**Исторический анализ:**
- Сбор данных о фактическом времени выполнения
- Корректировка коэффициентов на основе истории
- Учет специфики проекта и команды

### Автоматизация процессов

**Автоматические действия:**
1. Создание подзадач при создании Epic
2. Обновление статусов связанных задач
3. Уведомления о просроченных задачах
4. Генерация отчетов по завершению спринта

**Интеграция с внешними системами:**
- Синхронизация с Jira для обновления статусов
- Интеграция с Git для автоматического закрытия задач
- Связь с системами CI/CD для отслеживания деплоев
- Уведомления в Slack/Teams о важных событиях

**Правила валидации:**
- Epic должен содержать минимум 3 Story
- Story не может превышать 13 SP
- Задача не может находиться в одном статусе более недели
- Спринт не может содержать более 40 SP на разработчика

### Отчетность и аналитика

**Еженедельные отчеты:**
- Прогресс по Epic и спринтам
- Анализ velocity команды
- Выявление блокирующих факторов
- Рекомендации по улучшению процессов

**Ежемесячные метрики:**
- Общая производительность команды
- Качество оценок (отклонение факта от плана)
- Анализ типов задач и их сложности
- Тренды в развитии команды

**Настройки уведомлений:**
- Ежедневные напоминания о задачах в работе
- Еженедельные отчеты о прогрессе Epic
- Уведомления о критических задачах
- Сводки по завершению спринтов

Данная система обеспечивает полный цикл управления задачами от планирования до завершения с автоматизацией рутинных процессов и предоставлением детальной аналитики для принятия управленческих решений.
